#ifndef BYTECODE_MODULE_DEF_VERIFIER_H
#define BYTECODE_MODULE_DEF_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef BYTECODE_MODULE_DEF_READER_H
#include "bytecode_module_def_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int iree_vm_AttrDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_TypeDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_FunctionSignatureDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_ModuleDependencyDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_ImportFunctionDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_ExportFunctionDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_InternalFunctionDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_UncompressedDataDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_RodataSegmentDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_RwdataSegmentDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_ModuleStateDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_CallSiteLocDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_FileLineColLocDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_FusedLocDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_NameLocDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_FunctionSourceMapDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_DebugDatabaseDef_verify_table(flatcc_table_verifier_descriptor_t *td);
static int iree_vm_BytecodeModuleDef_verify_table(flatcc_table_verifier_descriptor_t *td);

static int iree_vm_CompressionTypeDef_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, iree_vm_UncompressedDataDef_verify_table); /* UncompressedDataDef */
    default: return flatcc_verify_ok;
    }
}

static int iree_vm_LocationTypeDef_union_verifier(flatcc_union_verifier_descriptor_t *ud)
{
    switch (ud->type) {
    case 1: return flatcc_verify_union_table(ud, iree_vm_CallSiteLocDef_verify_table); /* CallSiteLocDef */
    case 2: return flatcc_verify_union_table(ud, iree_vm_FileLineColLocDef_verify_table); /* FileLineColLocDef */
    case 3: return flatcc_verify_union_table(ud, iree_vm_FusedLocDef_verify_table); /* FusedLocDef */
    case 4: return flatcc_verify_union_table(ud, iree_vm_NameLocDef_verify_table); /* NameLocDef */
    default: return flatcc_verify_ok;
    }
}

static inline int iree_vm_FunctionDescriptor_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, iree_vm_FunctionDescriptor_identifier, 12, 4);
}

static inline int iree_vm_FunctionDescriptor_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, iree_vm_FunctionDescriptor_type_hash, 12, 4);
}

static inline int iree_vm_FunctionDescriptor_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 12, 4);
}

static inline int iree_vm_FunctionDescriptor_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 12, 4);
}

static inline int iree_vm_BytecodeLocationDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, iree_vm_BytecodeLocationDef_identifier, 8, 4);
}

static inline int iree_vm_BytecodeLocationDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, iree_vm_BytecodeLocationDef_type_hash, 8, 4);
}

static inline int iree_vm_BytecodeLocationDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 8, 4);
}

static inline int iree_vm_BytecodeLocationDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 8, 4);
}

static int iree_vm_AttrDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* key */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 1, 0) /* value */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_AttrDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_AttrDef_identifier, &iree_vm_AttrDef_verify_table);
}

static inline int iree_vm_AttrDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_AttrDef_type_identifier, &iree_vm_AttrDef_verify_table);
}

static inline int iree_vm_AttrDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_AttrDef_verify_table);
}

static inline int iree_vm_AttrDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_AttrDef_verify_table);
}

static int iree_vm_TypeDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* full_name */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_TypeDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_TypeDef_identifier, &iree_vm_TypeDef_verify_table);
}

static inline int iree_vm_TypeDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_TypeDef_type_identifier, &iree_vm_TypeDef_verify_table);
}

static inline int iree_vm_TypeDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_TypeDef_verify_table);
}

static inline int iree_vm_TypeDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_TypeDef_verify_table);
}

static int iree_vm_FunctionSignatureDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* calling_convention */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 1, 0, &iree_vm_AttrDef_verify_table) /* attrs */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_FunctionSignatureDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_FunctionSignatureDef_identifier, &iree_vm_FunctionSignatureDef_verify_table);
}

static inline int iree_vm_FunctionSignatureDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_FunctionSignatureDef_type_identifier, &iree_vm_FunctionSignatureDef_verify_table);
}

static inline int iree_vm_FunctionSignatureDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_FunctionSignatureDef_verify_table);
}

static inline int iree_vm_FunctionSignatureDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_FunctionSignatureDef_verify_table);
}

static int iree_vm_ModuleDependencyDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* name */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* minimum_version */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* flags */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_ModuleDependencyDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_ModuleDependencyDef_identifier, &iree_vm_ModuleDependencyDef_verify_table);
}

static inline int iree_vm_ModuleDependencyDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_ModuleDependencyDef_type_identifier, &iree_vm_ModuleDependencyDef_verify_table);
}

static inline int iree_vm_ModuleDependencyDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_ModuleDependencyDef_verify_table);
}

static inline int iree_vm_ModuleDependencyDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_ModuleDependencyDef_verify_table);
}

static int iree_vm_ImportFunctionDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* full_name */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 1, 0, &iree_vm_FunctionSignatureDef_verify_table) /* signature */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* flags */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_ImportFunctionDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_ImportFunctionDef_identifier, &iree_vm_ImportFunctionDef_verify_table);
}

static inline int iree_vm_ImportFunctionDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_ImportFunctionDef_type_identifier, &iree_vm_ImportFunctionDef_verify_table);
}

static inline int iree_vm_ImportFunctionDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_ImportFunctionDef_verify_table);
}

static inline int iree_vm_ImportFunctionDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_ImportFunctionDef_verify_table);
}

static int iree_vm_ExportFunctionDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* local_name */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 1, 0, &iree_vm_FunctionSignatureDef_verify_table) /* signature */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* internal_ordinal */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_ExportFunctionDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_ExportFunctionDef_identifier, &iree_vm_ExportFunctionDef_verify_table);
}

static inline int iree_vm_ExportFunctionDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_ExportFunctionDef_type_identifier, &iree_vm_ExportFunctionDef_verify_table);
}

static inline int iree_vm_ExportFunctionDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_ExportFunctionDef_verify_table);
}

static inline int iree_vm_ExportFunctionDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_ExportFunctionDef_verify_table);
}

static int iree_vm_InternalFunctionDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* local_name */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 1, 0, &iree_vm_FunctionSignatureDef_verify_table) /* signature */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_InternalFunctionDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_InternalFunctionDef_identifier, &iree_vm_InternalFunctionDef_verify_table);
}

static inline int iree_vm_InternalFunctionDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_InternalFunctionDef_type_identifier, &iree_vm_InternalFunctionDef_verify_table);
}

static inline int iree_vm_InternalFunctionDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_InternalFunctionDef_verify_table);
}

static inline int iree_vm_InternalFunctionDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_InternalFunctionDef_verify_table);
}

static int iree_vm_UncompressedDataDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int iree_vm_UncompressedDataDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_UncompressedDataDef_identifier, &iree_vm_UncompressedDataDef_verify_table);
}

static inline int iree_vm_UncompressedDataDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_UncompressedDataDef_type_identifier, &iree_vm_UncompressedDataDef_verify_table);
}

static inline int iree_vm_UncompressedDataDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_UncompressedDataDef_verify_table);
}

static inline int iree_vm_UncompressedDataDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_UncompressedDataDef_verify_table);
}

static int iree_vm_RodataSegmentDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_union_field(td, 1, 0, &iree_vm_CompressionTypeDef_union_verifier) /* compression_type */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 2, 0, 1, 1, INT64_C(4294967295)) /* embedded_data */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 8, 8) /* external_data_offset */)) return ret;
    if ((ret = flatcc_verify_field(td, 4, 8, 8) /* external_data_length */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_RodataSegmentDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_RodataSegmentDef_identifier, &iree_vm_RodataSegmentDef_verify_table);
}

static inline int iree_vm_RodataSegmentDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_RodataSegmentDef_type_identifier, &iree_vm_RodataSegmentDef_verify_table);
}

static inline int iree_vm_RodataSegmentDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_RodataSegmentDef_verify_table);
}

static inline int iree_vm_RodataSegmentDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_RodataSegmentDef_verify_table);
}

static int iree_vm_RwdataSegmentDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* byte_size */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_RwdataSegmentDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_RwdataSegmentDef_identifier, &iree_vm_RwdataSegmentDef_verify_table);
}

static inline int iree_vm_RwdataSegmentDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_RwdataSegmentDef_type_identifier, &iree_vm_RwdataSegmentDef_verify_table);
}

static inline int iree_vm_RwdataSegmentDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_RwdataSegmentDef_verify_table);
}

static inline int iree_vm_RwdataSegmentDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_RwdataSegmentDef_verify_table);
}

static int iree_vm_ModuleStateDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* global_bytes_capacity */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* global_ref_count */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_ModuleStateDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_ModuleStateDef_identifier, &iree_vm_ModuleStateDef_verify_table);
}

static inline int iree_vm_ModuleStateDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_ModuleStateDef_type_identifier, &iree_vm_ModuleStateDef_verify_table);
}

static inline int iree_vm_ModuleStateDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_ModuleStateDef_verify_table);
}

static inline int iree_vm_ModuleStateDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_ModuleStateDef_verify_table);
}

static int iree_vm_CallSiteLocDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 4, 4) /* callee */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* caller */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_CallSiteLocDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_CallSiteLocDef_identifier, &iree_vm_CallSiteLocDef_verify_table);
}

static inline int iree_vm_CallSiteLocDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_CallSiteLocDef_type_identifier, &iree_vm_CallSiteLocDef_verify_table);
}

static inline int iree_vm_CallSiteLocDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_CallSiteLocDef_verify_table);
}

static inline int iree_vm_CallSiteLocDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_CallSiteLocDef_verify_table);
}

static int iree_vm_FileLineColLocDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* filename */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* line */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* column */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_FileLineColLocDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_FileLineColLocDef_identifier, &iree_vm_FileLineColLocDef_verify_table);
}

static inline int iree_vm_FileLineColLocDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_FileLineColLocDef_type_identifier, &iree_vm_FileLineColLocDef_verify_table);
}

static inline int iree_vm_FileLineColLocDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_FileLineColLocDef_verify_table);
}

static inline int iree_vm_FileLineColLocDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_FileLineColLocDef_verify_table);
}

static int iree_vm_FusedLocDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* metadata */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 4, 4, INT64_C(1073741823)) /* locations */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_FusedLocDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_FusedLocDef_identifier, &iree_vm_FusedLocDef_verify_table);
}

static inline int iree_vm_FusedLocDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_FusedLocDef_type_identifier, &iree_vm_FusedLocDef_verify_table);
}

static inline int iree_vm_FusedLocDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_FusedLocDef_verify_table);
}

static inline int iree_vm_FusedLocDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_FusedLocDef_verify_table);
}

static int iree_vm_NameLocDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* name */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* child_location */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_NameLocDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_NameLocDef_identifier, &iree_vm_NameLocDef_verify_table);
}

static inline int iree_vm_NameLocDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_NameLocDef_type_identifier, &iree_vm_NameLocDef_verify_table);
}

static inline int iree_vm_NameLocDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_NameLocDef_verify_table);
}

static inline int iree_vm_NameLocDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_NameLocDef_verify_table);
}

static int iree_vm_FunctionSourceMapDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 0) /* local_name */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 8, 4, INT64_C(536870911)) /* locations */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_FunctionSourceMapDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_FunctionSourceMapDef_identifier, &iree_vm_FunctionSourceMapDef_verify_table);
}

static inline int iree_vm_FunctionSourceMapDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_FunctionSourceMapDef_type_identifier, &iree_vm_FunctionSourceMapDef_verify_table);
}

static inline int iree_vm_FunctionSourceMapDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_FunctionSourceMapDef_verify_table);
}

static inline int iree_vm_FunctionSourceMapDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_FunctionSourceMapDef_verify_table);
}

static int iree_vm_DebugDatabaseDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_union_vector_field(td, 1, 0, &iree_vm_LocationTypeDef_union_verifier) /* location_table */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 2, 0, &iree_vm_FunctionSourceMapDef_verify_table) /* functions */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_DebugDatabaseDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_DebugDatabaseDef_identifier, &iree_vm_DebugDatabaseDef_verify_table);
}

static inline int iree_vm_DebugDatabaseDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_DebugDatabaseDef_type_identifier, &iree_vm_DebugDatabaseDef_verify_table);
}

static inline int iree_vm_DebugDatabaseDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_DebugDatabaseDef_verify_table);
}

static inline int iree_vm_DebugDatabaseDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_DebugDatabaseDef_verify_table);
}

static int iree_vm_BytecodeModuleDef_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_string_field(td, 0, 1) /* name */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* version */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 2, 0, &iree_vm_AttrDef_verify_table) /* attrs */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 3, 0, &iree_vm_TypeDef_verify_table) /* types */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 4, 0, &iree_vm_ModuleDependencyDef_verify_table) /* dependencies */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 5, 0, &iree_vm_ImportFunctionDef_verify_table) /* imported_functions */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 6, 0, &iree_vm_ExportFunctionDef_verify_table) /* exported_functions */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 7, 0, &iree_vm_RodataSegmentDef_verify_table) /* rodata_segments */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 8, 0, &iree_vm_RwdataSegmentDef_verify_table) /* rwdata_segments */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 9, 0, &iree_vm_ModuleStateDef_verify_table) /* module_state */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 10, 0, 12, 4, INT64_C(357913941)) /* function_descriptors */)) return ret;
    if ((ret = flatcc_verify_field(td, 11, 4, 4) /* bytecode_version */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 12, 0, 1, 1, INT64_C(4294967295)) /* bytecode_data */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 13, 0, &iree_vm_DebugDatabaseDef_verify_table) /* debug_database */)) return ret;
    return flatcc_verify_ok;
}

static inline int iree_vm_BytecodeModuleDef_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_BytecodeModuleDef_identifier, &iree_vm_BytecodeModuleDef_verify_table);
}

static inline int iree_vm_BytecodeModuleDef_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, iree_vm_BytecodeModuleDef_type_identifier, &iree_vm_BytecodeModuleDef_verify_table);
}

static inline int iree_vm_BytecodeModuleDef_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &iree_vm_BytecodeModuleDef_verify_table);
}

static inline int iree_vm_BytecodeModuleDef_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &iree_vm_BytecodeModuleDef_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* BYTECODE_MODULE_DEF_VERIFIER_H */
