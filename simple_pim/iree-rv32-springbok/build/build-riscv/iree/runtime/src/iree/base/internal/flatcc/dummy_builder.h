#ifndef DUMMY_BUILDER_H
#define DUMMY_BUILDER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef DUMMY_READER_H
#include "dummy_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif

#define __iree_flatcc___IncludeWorkaround_formal_args , int32_t v0
#define __iree_flatcc___IncludeWorkaround_call_args , v0
static inline iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround_assign(iree_flatcc___IncludeWorkaround_t *p, int32_t v0)
{ p->reserved = v0;
  return p; }
static inline iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround_copy(iree_flatcc___IncludeWorkaround_t *p, const iree_flatcc___IncludeWorkaround_t *p2)
{ p->reserved = p2->reserved;
  return p; }
static inline iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround_assign_to_pe(iree_flatcc___IncludeWorkaround_t *p, int32_t v0)
{ flatbuffers_int32_assign_to_pe(&p->reserved, v0);
  return p; }
static inline iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround_copy_to_pe(iree_flatcc___IncludeWorkaround_t *p, const iree_flatcc___IncludeWorkaround_t *p2)
{ flatbuffers_int32_copy_to_pe(&p->reserved, &p2->reserved);
  return p; }
static inline iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround_assign_from_pe(iree_flatcc___IncludeWorkaround_t *p, int32_t v0)
{ flatbuffers_int32_assign_from_pe(&p->reserved, v0);
  return p; }
static inline iree_flatcc___IncludeWorkaround_t *iree_flatcc___IncludeWorkaround_copy_from_pe(iree_flatcc___IncludeWorkaround_t *p, const iree_flatcc___IncludeWorkaround_t *p2)
{ flatbuffers_int32_copy_from_pe(&p->reserved, &p2->reserved);
  return p; }
__flatbuffers_build_struct(flatbuffers_, iree_flatcc___IncludeWorkaround, 4, 4, iree_flatcc___IncludeWorkaround_file_identifier, iree_flatcc___IncludeWorkaround_type_identifier)
__flatbuffers_define_fixed_array_primitives(flatbuffers_, iree_flatcc___IncludeWorkaround, iree_flatcc___IncludeWorkaround_t)

#include "flatcc/flatcc_epilogue.h"
#endif /* DUMMY_BUILDER_H */
