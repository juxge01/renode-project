#ifndef BYTECODE_MODULE_DEF_JSON_PRINTER_H
#define BYTECODE_MODULE_DEF_JSON_PRINTER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#include "flatcc/flatcc_json_printer.h"
#include "flatcc/flatcc_prologue.h"

/*
 * Prints the default root table or struct from a buffer which must have
 * the schema declared file identifier, if any. It is also possible to
 * call the type specific `print_json_as_root` function wich accepts an
 * optional identifier (or 0) as argument. The printer `ctx` object must
 * be initialized with the appropriate output type, or it can be 0 which
 * defaults to stdout. NOTE: `ctx` is not generally allowed to be null, only
 * here for a simplified interface.
 */
static int bytecode_module_def_print_json(flatcc_json_printer_t *ctx, const char *buf, size_t bufsiz);

static void iree_vm_AttrDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_TypeDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_FunctionSignatureDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_ModuleDependencyDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_ImportFunctionDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_ExportFunctionDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_InternalFunctionDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_UncompressedDataDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_CompressionTypeDef_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void iree_vm_CompressionTypeDef_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void iree_vm_RodataSegmentDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_RwdataSegmentDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_ModuleStateDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_FunctionDescriptor_print_json_struct(flatcc_json_printer_t *ctx, const void *p);
static void iree_vm_CallSiteLocDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_FileLineColLocDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_FusedLocDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_NameLocDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_LocationTypeDef_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type);
static void iree_vm_LocationTypeDef_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud);
static void iree_vm_BytecodeLocationDef_print_json_struct(flatcc_json_printer_t *ctx, const void *p);
static void iree_vm_FunctionSourceMapDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_DebugDatabaseDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);
static void iree_vm_BytecodeModuleDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td);

static void iree_vm_ModuleDependencyFlagBits_print_json_enum(flatcc_json_printer_t *ctx, uint32_t v)
{
    uint32_t x = v;
    int multiple = 0 != (x & (x - 1));
    int i = 0;

    if ((x & UINT32_C(0xfffffffc)) || x == 0) {
        flatcc_json_printer_uint32(ctx, v);
        return;
    }
    flatcc_json_printer_delimit_enum_flags(ctx, multiple);
    if (x & UINT32_C(0x1)) flatcc_json_printer_enum_flag(ctx, i++, "REQUIRED", 8);
    if (x & UINT32_C(0x2)) flatcc_json_printer_enum_flag(ctx, i++, "OPTIONAL", 8);
    flatcc_json_printer_delimit_enum_flags(ctx, multiple);
}

static void iree_vm_ImportFlagBits_print_json_enum(flatcc_json_printer_t *ctx, uint32_t v)
{
    uint32_t x = v;
    int multiple = 0 != (x & (x - 1));
    int i = 0;

    if ((x & UINT32_C(0xfffffffc)) || x == 0) {
        flatcc_json_printer_uint32(ctx, v);
        return;
    }
    flatcc_json_printer_delimit_enum_flags(ctx, multiple);
    if (x & UINT32_C(0x1)) flatcc_json_printer_enum_flag(ctx, i++, "REQUIRED", 8);
    if (x & UINT32_C(0x2)) flatcc_json_printer_enum_flag(ctx, i++, "OPTIONAL", 8);
    flatcc_json_printer_delimit_enum_flags(ctx, multiple);
}

static void iree_vm_CompressionTypeDef_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "UncompressedDataDef", 19);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void iree_vm_CompressionTypeDef_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, iree_vm_UncompressedDataDef_print_json_table);
        break;
    default:
        break;
    }
}

static void iree_vm_LocationTypeDef_print_json_union_type(flatcc_json_printer_t *ctx, flatbuffers_utype_t type)
{
    switch (type) {
    case 1:
        flatcc_json_printer_enum(ctx, "CallSiteLocDef", 14);
        break;
    case 2:
        flatcc_json_printer_enum(ctx, "FileLineColLocDef", 17);
        break;
    case 3:
        flatcc_json_printer_enum(ctx, "FusedLocDef", 11);
        break;
    case 4:
        flatcc_json_printer_enum(ctx, "NameLocDef", 10);
        break;
    default:
        flatcc_json_printer_enum(ctx, "NONE", 4);
        break;
    }
}

static void iree_vm_LocationTypeDef_print_json_union(flatcc_json_printer_t *ctx, flatcc_json_printer_union_descriptor_t *ud)
{
    switch (ud->type) {
    case 1:
        flatcc_json_printer_union_table(ctx, ud, iree_vm_CallSiteLocDef_print_json_table);
        break;
    case 2:
        flatcc_json_printer_union_table(ctx, ud, iree_vm_FileLineColLocDef_print_json_table);
        break;
    case 3:
        flatcc_json_printer_union_table(ctx, ud, iree_vm_FusedLocDef_print_json_table);
        break;
    case 4:
        flatcc_json_printer_union_table(ctx, ud, iree_vm_NameLocDef_print_json_table);
        break;
    default:
        break;
    }
}

static void iree_vm_FunctionDescriptor_print_json_struct(flatcc_json_printer_t *ctx, const void *p)
{
    flatcc_json_printer_int32_struct_field(ctx, 0, p, 0, "bytecode_offset", 15);
    flatcc_json_printer_int32_struct_field(ctx, 1, p, 4, "bytecode_length", 15);
    flatcc_json_printer_int16_struct_field(ctx, 2, p, 8, "i32_register_count", 18);
    flatcc_json_printer_int16_struct_field(ctx, 3, p, 10, "ref_register_count", 18);
}

static inline int iree_vm_FunctionDescriptor_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_struct_as_root(ctx, buf, bufsiz, fid, iree_vm_FunctionDescriptor_print_json_struct);
}

static void iree_vm_BytecodeLocationDef_print_json_struct(flatcc_json_printer_t *ctx, const void *p)
{
    flatcc_json_printer_int32_struct_field(ctx, 0, p, 0, "bytecode_offset", 15);
    flatcc_json_printer_int32_struct_field(ctx, 1, p, 4, "location", 8);
}

static inline int iree_vm_BytecodeLocationDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_struct_as_root(ctx, buf, bufsiz, fid, iree_vm_BytecodeLocationDef_print_json_struct);
}

static void iree_vm_AttrDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "key", 3);
    flatcc_json_printer_string_field(ctx, td, 1, "value", 5);
}

static inline int iree_vm_AttrDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_AttrDef_print_json_table);
}

static void iree_vm_TypeDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "full_name", 9);
}

static inline int iree_vm_TypeDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_TypeDef_print_json_table);
}

static void iree_vm_FunctionSignatureDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "calling_convention", 18);
    flatcc_json_printer_table_vector_field(ctx, td, 1, "attrs", 5, iree_vm_AttrDef_print_json_table);
}

static inline int iree_vm_FunctionSignatureDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_FunctionSignatureDef_print_json_table);
}

static void iree_vm_ModuleDependencyDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "name", 4);
    flatcc_json_printer_uint32_field(ctx, td, 1, "minimum_version", 15, UINT32_C(0));
    flatcc_json_printer_uint32_enum_field(ctx, td, 2, "flags", 5, UINT32_C(1), iree_vm_ModuleDependencyFlagBits_print_json_enum);
}

static inline int iree_vm_ModuleDependencyDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_ModuleDependencyDef_print_json_table);
}

static void iree_vm_ImportFunctionDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "full_name", 9);
    flatcc_json_printer_table_field(ctx, td, 1, "signature", 9, iree_vm_FunctionSignatureDef_print_json_table);
    flatcc_json_printer_uint32_enum_field(ctx, td, 2, "flags", 5, UINT32_C(1), iree_vm_ImportFlagBits_print_json_enum);
}

static inline int iree_vm_ImportFunctionDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_ImportFunctionDef_print_json_table);
}

static void iree_vm_ExportFunctionDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "local_name", 10);
    flatcc_json_printer_table_field(ctx, td, 1, "signature", 9, iree_vm_FunctionSignatureDef_print_json_table);
    flatcc_json_printer_int32_field(ctx, td, 2, "internal_ordinal", 16, INT32_C(0));
}

static inline int iree_vm_ExportFunctionDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_ExportFunctionDef_print_json_table);
}

static void iree_vm_InternalFunctionDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "local_name", 10);
    flatcc_json_printer_table_field(ctx, td, 1, "signature", 9, iree_vm_FunctionSignatureDef_print_json_table);
}

static inline int iree_vm_InternalFunctionDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_InternalFunctionDef_print_json_table);
}

static void iree_vm_UncompressedDataDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
}

static inline int iree_vm_UncompressedDataDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_UncompressedDataDef_print_json_table);
}

static void iree_vm_RodataSegmentDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_union_field(ctx, td, 1, "compression_type", 16, iree_vm_CompressionTypeDef_print_json_union_type, iree_vm_CompressionTypeDef_print_json_union);
    flatcc_json_printer_uint8_vector_field(ctx, td, 2, "embedded_data", 13);
    flatcc_json_printer_uint64_field(ctx, td, 3, "external_data_offset", 20, UINT64_C(0));
    flatcc_json_printer_uint64_field(ctx, td, 4, "external_data_length", 20, UINT64_C(0));
}

static inline int iree_vm_RodataSegmentDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_RodataSegmentDef_print_json_table);
}

static void iree_vm_RwdataSegmentDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_int32_field(ctx, td, 0, "byte_size", 9, INT32_C(0));
}

static inline int iree_vm_RwdataSegmentDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_RwdataSegmentDef_print_json_table);
}

static void iree_vm_ModuleStateDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_int32_field(ctx, td, 0, "global_bytes_capacity", 21, INT32_C(0));
    flatcc_json_printer_int32_field(ctx, td, 1, "global_ref_count", 16, INT32_C(0));
}

static inline int iree_vm_ModuleStateDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_ModuleStateDef_print_json_table);
}

static void iree_vm_CallSiteLocDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_int32_field(ctx, td, 0, "callee", 6, INT32_C(0));
    flatcc_json_printer_int32_field(ctx, td, 1, "caller", 6, INT32_C(0));
}

static inline int iree_vm_CallSiteLocDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_CallSiteLocDef_print_json_table);
}

static void iree_vm_FileLineColLocDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "filename", 8);
    flatcc_json_printer_int32_field(ctx, td, 1, "line", 4, INT32_C(0));
    flatcc_json_printer_int32_field(ctx, td, 2, "column", 6, INT32_C(0));
}

static inline int iree_vm_FileLineColLocDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_FileLineColLocDef_print_json_table);
}

static void iree_vm_FusedLocDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "metadata", 8);
    flatcc_json_printer_int32_vector_field(ctx, td, 1, "locations", 9);
}

static inline int iree_vm_FusedLocDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_FusedLocDef_print_json_table);
}

static void iree_vm_NameLocDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "name", 4);
    flatcc_json_printer_int32_field(ctx, td, 1, "child_location", 14, INT32_C(0));
}

static inline int iree_vm_NameLocDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_NameLocDef_print_json_table);
}

static void iree_vm_FunctionSourceMapDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "local_name", 10);
    flatcc_json_printer_struct_vector_field(ctx, td, 1, "locations", 9, 8, iree_vm_BytecodeLocationDef_print_json_struct);
}

static inline int iree_vm_FunctionSourceMapDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_FunctionSourceMapDef_print_json_table);
}

static void iree_vm_DebugDatabaseDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_union_vector_field(ctx, td, 1, "location_table", 14, iree_vm_LocationTypeDef_print_json_union_type, iree_vm_LocationTypeDef_print_json_union);
    flatcc_json_printer_table_vector_field(ctx, td, 2, "functions", 9, iree_vm_FunctionSourceMapDef_print_json_table);
}

static inline int iree_vm_DebugDatabaseDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_DebugDatabaseDef_print_json_table);
}

static void iree_vm_BytecodeModuleDef_print_json_table(flatcc_json_printer_t *ctx, flatcc_json_printer_table_descriptor_t *td)
{
    flatcc_json_printer_string_field(ctx, td, 0, "name", 4);
    flatcc_json_printer_uint32_field(ctx, td, 1, "version", 7, UINT32_C(0));
    flatcc_json_printer_table_vector_field(ctx, td, 2, "attrs", 5, iree_vm_AttrDef_print_json_table);
    flatcc_json_printer_table_vector_field(ctx, td, 3, "types", 5, iree_vm_TypeDef_print_json_table);
    flatcc_json_printer_table_vector_field(ctx, td, 4, "dependencies", 12, iree_vm_ModuleDependencyDef_print_json_table);
    flatcc_json_printer_table_vector_field(ctx, td, 5, "imported_functions", 18, iree_vm_ImportFunctionDef_print_json_table);
    flatcc_json_printer_table_vector_field(ctx, td, 6, "exported_functions", 18, iree_vm_ExportFunctionDef_print_json_table);
    flatcc_json_printer_table_vector_field(ctx, td, 7, "rodata_segments", 15, iree_vm_RodataSegmentDef_print_json_table);
    flatcc_json_printer_table_vector_field(ctx, td, 8, "rwdata_segments", 15, iree_vm_RwdataSegmentDef_print_json_table);
    flatcc_json_printer_table_field(ctx, td, 9, "module_state", 12, iree_vm_ModuleStateDef_print_json_table);
    flatcc_json_printer_struct_vector_field(ctx, td, 10, "function_descriptors", 20, 12, iree_vm_FunctionDescriptor_print_json_struct);
    flatcc_json_printer_uint32_field(ctx, td, 11, "bytecode_version", 16, UINT32_C(0));
    flatcc_json_printer_uint8_vector_field(ctx, td, 12, "bytecode_data", 13);
    flatcc_json_printer_table_field(ctx, td, 13, "debug_database", 14, iree_vm_DebugDatabaseDef_print_json_table);
}

static inline int iree_vm_BytecodeModuleDef_print_json_as_root(flatcc_json_printer_t *ctx, const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_json_printer_table_as_root(ctx, buf, bufsiz, fid, iree_vm_BytecodeModuleDef_print_json_table);
}

static int bytecode_module_def_print_json(flatcc_json_printer_t *ctx, const char *buf, size_t bufsiz)
{
    flatcc_json_printer_t printer;

    if (ctx == 0) {
        ctx = &printer;
        flatcc_json_printer_init(ctx, 0);
    }
    return iree_vm_BytecodeModuleDef_print_json_as_root(ctx, buf, bufsiz, "IREE");
}

#include "flatcc/flatcc_epilogue.h"
#endif /* BYTECODE_MODULE_DEF_JSON_PRINTER_H */
